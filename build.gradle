buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:1.3.6'
        classpath "gradle.plugin.co.riiid:gradle-github-plugin:0.4.2"

    }
    allprojects { apply plugin: "idea" }
}
plugins {
    id 'groovy'
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
    id 'maven-publish'
    id "co.riiid.gradle" version "0.4.2"

}
apply plugin: 'org.owasp.dependencycheck'
apply plugin: "co.riiid.gradle"

def libversion = '3.3.3'
if(System.getenv("VERTX_VERSION") != null)
    libversion = System.getenv("VERTX_VERSION")
version = "${libversion}-73"
if(System.getenv('DUMP_VERSION'))
{
    println version
    System.exit(0)
}

println "building for $libversion"
def GH_TOKEN = System.getenv("GH_TOKEN")
def AWS_MVN_BUCKET = System.getenv("AWS_MVN_BUCKET")
def AWS_DEFAULT_REGION = System.getenv("AWS_DEFAULT_REGION")
def AWS_ACCESS_KEY_ID = System.getenv("AWS_ACCESS_KEY_ID")
def AWS_SECRET_ACCESS_KEY = System.getenv("AWS_SECRET_ACCESS_KEY")
def USER = System.getenv("USER")

if(GH_TOKEN){
    github {
        owner = 'cinterloper'
        repo = 'cornerstone'
        token = GH_TOKEN
        tagName = version
        targetCommitish = 'master'
        name = "v$version"
        body = "release $version \n ${System.getenv('GH_RELEAE_TEXT') ?: ''}"
        assets = [
                "build/libs/cornerstone-${version}-fat.jar"
        ]
    }
}


repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url 'http://dl.bintray.com/gesellix/docker-utils' }
    if (AWS_MVN_BUCKET && !AWS_MVN_BUCKET.allWhitespace) {
        maven {
            url "s3://$AWS_MVN_BUCKET/maven2"
            credentials(AwsCredentials) {
                accessKey AWS_ACCESS_KEY_ID
                secretKey AWS_SECRET_ACCESS_KEY
            }
        }
    }
}
publishing {
    repositories {
        maven {
            url "file:///home/$USER/maven_repo"
        }
        mavenLocal()
        if (AWS_MVN_BUCKET && !AWS_MVN_BUCKET.allWhitespace) {
            maven {
                url "s3://$AWS_MVN_BUCKET/maven2"
                credentials(AwsCredentials) {
                    accessKey AWS_ACCESS_KEY_ID
                    secretKey AWS_SECRET_ACCESS_KEY
                }
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId 'net.iowntheinter'
            artifactId 'cornerstone'
            from components.java
        }
    }
}
sourceCompatibility = '1.8'
mainClassName = 'net.iowntheinter.coreLauncher.impl.coreStarter'

dependencies {
    compile "io.vertx:vertx-core:$libversion"
    compile "io.vertx:vertx-lang-groovy:$libversion"
    compile "io.vertx:vertx-shell:$libversion"
    compile "io.vertx:vertx-unit:$libversion"
    compile "com.jayway.jsonpath:json-path:2.2.0"
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'ch.qos.logback:logback-core:1.1.7'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.bettercloud:vault-java-driver:1.2.0'
    compile "net.iowntheinter:kvdn:$libversion-1.6.6"
    compile 'de.gesellix:docker-client:2016-10-07T18-47-59'
}

processResources {
    from 'src/main/groovy'
}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': 'net.iowntheinter.vertx.componentRegister.impl.CoreLauncher'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}
